/**
 * Copyright (c) 2023 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Adam Midlik <midlik@gmail.com>
 */
import { PostprocessingProps } from '../mol-canvas3d/passes/postprocessing';
import { PluginContext } from './context';
import { PluginSpec } from './spec';
import { HeadlessScreenshotHelper, HeadlessScreenshotHelperOptions } from './util/headless-screenshot';
/** PluginContext that can be used in Node.js (without DOM) */
export declare class HeadlessPluginContext extends PluginContext {
    renderer: HeadlessScreenshotHelper;
    constructor(spec: PluginSpec, canvasSize?: {
        width: number;
        height: number;
    }, rendererOptions?: HeadlessScreenshotHelperOptions);
    /** Render the current plugin state to a PNG or JPEG file */
    saveImage(outPath: string, imageSize?: {
        width: number;
        height: number;
    }, props?: Partial<PostprocessingProps>, format?: 'png' | 'jpeg', jpegQuality?: number): Promise<void>;
    /** Get the current plugin state */
    getStateSnapshot(): Promise<import("../mol-plugin-state/manager/snapshots").PluginStateSnapshotManager.StateSnapshot>;
    /** Save the current plugin state to a MOLJ file */
    saveStateSnapshot(outPath: string): Promise<void>;
}
