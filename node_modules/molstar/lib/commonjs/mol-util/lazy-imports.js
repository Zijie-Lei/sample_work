"use strict";
/**
 * Copyright (c) 2019-2023 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Adam Midlik <midlik@gmail.com>
 *
 * Manage dependencies which are not listed in `package.json` for performance reasons.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LazyImports = void 0;
var _loadedExtraPackages = {};
/** Define imports that only get imported when first needed.
 * Example usage:
 * ```
 * const lazyImports = LazyImports.create('gl', 'jpeg-js', 'pngjs') as {
 *     'gl': typeof import('gl'),
 *     'jpeg-js': typeof import('jpeg-js'),
 *     'pngjs': typeof import('pngjs'),
 * };
 * ...
 * lazyImports.pngjs.blablabla("I'm being imported now");
 * lazyImports.pngjs.blablabla("I'm cached :D");
 * ```
 */
var LazyImports = /** @class */ (function () {
    function LazyImports(packages) {
        var _this = this;
        this.packages = packages;
        var _loop_1 = function (p) {
            Object.defineProperty(this_1, p, {
                get: function () { return _this.getPackage(p); },
            });
        };
        var this_1 = this;
        for (var _i = 0, packages_1 = packages; _i < packages_1.length; _i++) {
            var p = packages_1[_i];
            _loop_1(p);
        }
    }
    LazyImports.create = function () {
        var packages = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            packages[_i] = arguments[_i];
        }
        return new LazyImports(packages);
    };
    LazyImports.prototype.getPackage = function (packageName) {
        if (!_loadedExtraPackages[packageName]) {
            try {
                _loadedExtraPackages[packageName] = require(packageName);
            }
            catch (_a) {
                var message = "Package '".concat(packageName, "' is not installed. (Some packages are not listed in the 'molstar' package dependencies for performance reasons. If you're seeing this error, you'll probably need them. If your project depends on 'molstar', add these to your dependencies: ").concat(this.packages.join(', '), ". If you're running 'molstar' directly, run this: npm install --no-save ").concat(this.packages.join(' '), ")");
                throw new Error(message);
            }
        }
        return _loadedExtraPackages[packageName];
    };
    return LazyImports;
}());
exports.LazyImports = LazyImports;
