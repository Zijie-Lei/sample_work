/**
 * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Joan Segura <joan.segura@rcsb.org>
 */
import { StructureRef } from 'molstar/lib/mol-plugin-state/manager/structure/hierarchy-state';
import { PluginContext } from 'molstar/lib/mol-plugin/context';
import { StructureRepresentationRegistry } from 'molstar/lib/mol-repr/structure/registry';
import { SelectBase, SelectRange, SelectTarget, Target } from './selection';
export declare function setFocusFromRange(plugin: PluginContext, target: SelectRange): void;
export declare function getStructureRefWithModelId(structures: StructureRef[], target: {
    modelId: string;
}): StructureRef | undefined;
export declare function select(plugin: PluginContext, targets: SelectTarget | SelectTarget[], mode: 'select' | 'hover', modifier: 'add' | 'set'): void;
export declare function clearSelection(plugin: PluginContext, mode: 'select' | 'hover', target?: {
    modelId: string;
} & Target): void;
export declare function createComponent(plugin: PluginContext, componentLabel: string, targets: SelectBase | SelectTarget | SelectTarget[], representationType: StructureRepresentationRegistry.BuiltIn): Promise<void>;
export declare function removeComponent(plugin: PluginContext, componentLabel: string): Promise<void>;
