import { ThemeDataContext } from 'molstar/lib/mol-theme/theme';
import { ParamDefinition as PD } from 'molstar/lib/mol-util/param-definition';
import { CustomModelProperty } from 'molstar/lib/mol-model-props/common/custom-model-property';
import { Model } from 'molstar/lib/mol-model/structure/model';
import { CustomProperty } from 'molstar/lib/mol-model-props/common/custom-property';
import { PropertyWrapper } from 'molstar/lib/mol-model-props/common/wrapper';
import { IndexedCustomProperty } from 'molstar/lib/commonjs/mol-model/structure/model/properties/custom/indexed';
import { Structure, StructureElement } from 'molstar/lib/mol-model/structure/structure';
export type RSCC = PropertyWrapper<{
    score: IndexedCustomProperty.Residue<[number, string]>;
    category: string[];
}>;
export declare namespace RSCC {
    function getScore(e: StructureElement.Location): [number, string];
    function getCategories(structure?: Structure): string[];
    function isApplicable(ctx: ThemeDataContext): boolean;
    function obtain(ctx: CustomProperty.Context, model: Model, props: RSCCProps): Promise<CustomProperty.Data<any>>;
}
export declare const RSCCParams: {};
export type RSCCParams = typeof RSCCParams;
export type RSCCProps = PD.Values<RSCCParams>;
export declare const RSCCProvider: CustomModelProperty.Provider<RSCCParams, RSCC>;
