"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidationReportControls = exports.QualityIconSvg = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
/**
 * Copyright (c) 2021-2022 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Sebastian Bittrich <sebastian.bittrich@rcsb.org>
 */
var base_1 = require("molstar/lib/mol-plugin-ui/base");
var hierarchy_1 = require("molstar/lib/mol-plugin-state/manager/structure/hierarchy");
var prop_1 = require("molstar/lib/extensions/rcsb/validation-report/prop");
var behavior_1 = require("molstar/lib/extensions/rcsb/validation-report/behavior");
var behavior_2 = require("../helpers/rscc/behavior");
var action_menu_1 = require("molstar/lib/mol-plugin-ui/controls/action-menu");
var mmcif_1 = require("molstar/lib/mol-model-formats/structure/mmcif");
var prop_2 = require("molstar/lib/extensions/model-archive/quality-assessment/prop");
var plddt_1 = require("molstar/lib/extensions/model-archive/quality-assessment/color/plddt");
var qmean_1 = require("molstar/lib/extensions/model-archive/quality-assessment/color/qmean");
var prop_3 = require("../helpers/rscc/prop");
var ValidationReportTag = 'validation-report';
var RSCCReportTag = 'rscc';
var _QualityIcon = (0, jsx_runtime_1.jsx)("svg", tslib_1.__assign({ width: '50px', height: '50px', viewBox: '0 0 38 47' }, { children: (0, jsx_runtime_1.jsxs)("g", tslib_1.__assign({ strokeWidth: '4', fill: 'none' }, { children: [(0, jsx_runtime_1.jsx)("path", { d: 'm19 4.8c-3.7 3.6-9 5.8-15 5.8v4.3c0 25 14 29 14 29s16-4.5 16-29v-4.3c-6 0-11-2.3-15-5.8z', stroke: '#000', strokeLinecap: 'square', strokeMiterlimit: '10' }), (0, jsx_runtime_1.jsx)("path", { d: 'm13 23 3.5 3.5 9.4-9.4', stroke: '#000' })] })) }));
function QualityIconSvg() { return _QualityIcon; }
exports.QualityIconSvg = QualityIconSvg;
/**
 * A high-level component that gives access to the validation report preset.
 */
var ValidationReportControls = /** @class */ (function (_super) {
    tslib_1.__extends(ValidationReportControls, _super);
    function ValidationReportControls() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.requestValidationReportPreset = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var err_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, behavior_1.ValidationReportGeometryQualityPreset.apply(this.pivot.cell, Object.create(null), this.plugin)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        err_1 = _a.sent();
                        // happens e.g. for 2W4S
                        this.setState(function (_a) {
                            var errorStates = _a.errorStates;
                            var errors = new Set(errorStates);
                            errors.add(ValidationReportTag);
                            return { errorStates: errors };
                        });
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        }); };
        _this.requestRSCCPreset = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var err_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, behavior_2.RSCCPreset.apply(this.pivot.cell, Object.create(null), this.plugin)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        err_2 = _a.sent();
                        // happens e.g. for 4HHB
                        this.setState(function (_a) {
                            var errorStates = _a.errorStates;
                            var errors = new Set(errorStates);
                            errors.add(RSCCReportTag);
                            return { errorStates: errors };
                        });
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        }); };
        _this.requestPLDDTConfidenceColoring = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.plugin.managers.structure.component.updateRepresentationsTheme(this.pivot.components, { color: plddt_1.PLDDTConfidenceColorThemeProvider.name })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        _this.requestQmeanConfidenceColoring = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.plugin.managers.structure.component.updateRepresentationsTheme(this.pivot.components, { color: qmean_1.QmeanScoreColorThemeProvider.name })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        _this.selectAction = function (item) {
            if (!item)
                return;
            (item === null || item === void 0 ? void 0 : item.value)();
        };
        return _this;
    }
    ValidationReportControls.prototype.defaultState = function () {
        return {
            header: 'Quality Assessment',
            isCollapsed: false,
            isHidden: true,
            errorStates: new Set(),
            brand: { accent: 'cyan', svg: QualityIconSvg }
        };
    };
    ValidationReportControls.prototype.componentDidMount = function () {
        var _this = this;
        this.subscribe(this.plugin.managers.structure.hierarchy.behaviors.selection, function () {
            var _a = _this.state, errorStates = _a.errorStates, description = _a.description;
            var nextDescription = hierarchy_1.StructureHierarchyManager.getSelectedStructuresDescription(_this.plugin);
            _this.setState({
                isHidden: !_this.canEnable(),
                // if structure is unchanged then keep old error states
                errorStates: nextDescription === description ? errorStates : new Set(),
                description: nextDescription
            });
        });
    };
    Object.defineProperty(ValidationReportControls.prototype, "pivot", {
        get: function () {
            return this.plugin.managers.structure.hierarchy.selection.structures[0];
        },
        enumerable: false,
        configurable: true
    });
    ValidationReportControls.prototype.canEnable = function () {
        var selection = this.plugin.managers.structure.hierarchy.selection;
        if (selection.structures.length !== 1)
            return false;
        var pivot = this.pivot.cell;
        if (!pivot.obj || pivot.obj.data.models.length !== 1)
            return false;
        var model = pivot.obj.data.models[0];
        // all supported options must be registered here
        return prop_1.ValidationReport.isApplicable(model) || prop_2.QualityAssessment.isApplicable(model, 'pLDDT') || prop_2.QualityAssessment.isApplicable(model, 'qmean');
    };
    Object.defineProperty(ValidationReportControls.prototype, "noValidationReport", {
        get: function () {
            var _a;
            var structure = (_a = this.pivot.cell.obj) === null || _a === void 0 ? void 0 : _a.data;
            if (!structure || structure.models.length !== 1)
                return true;
            var model = structure.models[0];
            return !model || !this.isFromPdbArchive(model);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValidationReportControls.prototype, "rsccData", {
        get: function () {
            var _a;
            var structure = (_a = this.pivot.cell.obj) === null || _a === void 0 ? void 0 : _a.data;
            return prop_3.RSCC.isApplicable({ structure: structure });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValidationReportControls.prototype, "pLDDTData", {
        get: function () {
            var _a;
            var structure = (_a = this.pivot.cell.obj) === null || _a === void 0 ? void 0 : _a.data;
            if (!structure || structure.models.length !== 1)
                return false;
            var model = structure.models[0];
            return prop_2.QualityAssessment.isApplicable(model, 'pLDDT');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValidationReportControls.prototype, "qmeanData", {
        get: function () {
            var _a;
            var structure = (_a = this.pivot.cell.obj) === null || _a === void 0 ? void 0 : _a.data;
            if (!structure || structure.models.length !== 1)
                return false;
            var model = structure.models[0];
            return prop_2.QualityAssessment.isApplicable(model, 'qmean');
        },
        enumerable: false,
        configurable: true
    });
    ValidationReportControls.prototype.isFromPdbArchive = function (model) {
        if (!mmcif_1.MmcifFormat.is(model.sourceData))
            return false;
        return model.entryId.match(/^[1-9][a-z0-9]{3}$/i) !== null ||
            model.entryId.match(/^pdb_[0-9]{4}[1-9][a-z0-9]{3}$/i) !== null;
    };
    Object.defineProperty(ValidationReportControls.prototype, "actions", {
        get: function () {
            var noValidationReport = this.noValidationReport;
            var validationReportError = this.state.errorStates.has(ValidationReportTag);
            var rsccReportError = this.state.errorStates.has(RSCCReportTag);
            var out = [
                {
                    kind: 'item',
                    label: validationReportError ? 'Failed to Obtain Validation Report' : (noValidationReport ? 'No Validation Report Available' : 'Validation Report'),
                    value: this.requestValidationReportPreset,
                    disabled: noValidationReport || validationReportError
                },
            ];
            if (this.rsccData) {
                out.push({
                    kind: 'item',
                    label: rsccReportError || validationReportError ? 'Failed to Obtain RSCC Values' : (noValidationReport ? 'No RSCC Values Available' : 'Experimental Support Confidence'),
                    value: this.requestRSCCPreset,
                    disabled: noValidationReport || validationReportError || rsccReportError
                });
            }
            if (this.pLDDTData) {
                out.push({
                    kind: 'item',
                    label: 'pLDDT Confidence Scores',
                    value: this.requestPLDDTConfidenceColoring
                });
            }
            if (this.qmeanData) {
                out.push({
                    kind: 'item',
                    label: 'QMEAN Confidence Scores',
                    value: this.requestQmeanConfidenceColoring
                });
            }
            return out;
        },
        enumerable: false,
        configurable: true
    });
    ValidationReportControls.prototype.renderControls = function () {
        return (0, jsx_runtime_1.jsx)(action_menu_1.ActionMenu, { items: this.actions, onSelect: this.selectAction });
    };
    return ValidationReportControls;
}(base_1.CollapsableControls));
exports.ValidationReportControls = ValidationReportControls;
