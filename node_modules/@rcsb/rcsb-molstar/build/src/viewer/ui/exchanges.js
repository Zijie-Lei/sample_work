"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExchangesControl = exports.DefaultExchanges = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
/**
 * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Sebastian Bittrich <sebastian.bittrich@rcsb.org>
 */
var React = tslib_1.__importStar(require("react"));
var common_1 = require("molstar/lib/mol-plugin-ui/controls/common");
var strucmotif_1 = require("./strucmotif");
exports.DefaultExchanges = new Map([
    ['ALA', 'Alanine'],
    ['CYS', 'Cysteine'],
    ['ASP', 'Aspartic Acid'],
    ['GLU', 'Glutamic Acid'],
    ['PHE', 'Phenylalanine'],
    ['GLY', 'Glycine'],
    ['HIS', 'Histidine'],
    ['ILE', 'Isoleucine'],
    ['LYS', 'Lysine'],
    ['LEU', 'Leucine'],
    ['MET', 'Methionine'],
    ['ASN', 'Asparagine'],
    ['PRO', 'Proline'],
    ['GLN', 'Glutamine'],
    ['ARG', 'Arginine'],
    ['SER', 'Serine'],
    ['THR', 'Threonine'],
    ['VAL', 'Valine'],
    ['TRP', 'Tryptophan'],
    ['TYR', 'Tyrosine'],
    ['DA', 'Deoxyadenosine'],
    ['DC', 'Deoxycytidine'],
    ['DG', 'Deoxyguanosine'],
    ['DT', 'Deoxythymidine'],
    ['A', 'Adenosine'],
    ['C', 'Cytidine'],
    ['G', 'Guanosine'],
    ['U', 'Uridine'],
]);
var ExchangesControl = /** @class */ (function (_super) {
    tslib_1.__extends(ExchangesControl, _super);
    function ExchangesControl() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onClickSwatch = function (e) {
            var tlc = e.currentTarget.getAttribute('data-id');
            _this.props.handler.toggleExchange(tlc);
            // this makes Chrome pick up CSS change
            e.currentTarget.blur();
        };
        return _this;
    }
    ExchangesControl.prototype.swatch = function () {
        var _this = this;
        var out = [];
        exports.DefaultExchanges.forEach(function (v, k) {
            var isSelected = _this.props.handler.hasExchange(k);
            var className = isSelected ? 'msp-control-current' : '';
            var isDisabled = _this.props.handler.exchanges.size >= strucmotif_1.MAX_EXCHANGES && !isSelected;
            out[out.length] = (0, jsx_runtime_1.jsx)(common_1.Button, tslib_1.__assign({ title: v, inline: true, "data-id": k, onClick: _this.onClickSwatch, style: { padding: 0, fontSize: '13px' }, className: className, disabled: isDisabled }, { children: k && isSelected ? (0, jsx_runtime_1.jsx)("b", { children: k }) : k }), k);
        });
        return (0, jsx_runtime_1.jsx)("div", tslib_1.__assign({ className: 'msp-combined-color-swatch' }, { children: out }));
    };
    ExchangesControl.prototype.render = function () {
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: (0, jsx_runtime_1.jsx)("div", tslib_1.__assign({ className: 'msp-control-offset' }, { children: this.swatch() })) });
    };
    return ExchangesControl;
}(React.Component));
exports.ExchangesControl = ExchangesControl;
