{"ast":null,"code":"var _jsxFileName = \"/Users/zijielei/Documents/GitHub/sample_work/src/ui/FileUpload.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../App.css';\nimport * as constants from '../Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FileUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadId: null\n    };\n    this.handleSubmitFile = this.handleSubmitFile.bind(this);\n    this.handleCheckStatus = this.handleCheckStatus.bind(this);\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.fileInput = /*#__PURE__*/React.createRef();\n  }\n\n  /**\n   * Handles the submission and fetching process when file is uploaded\n   *\n   * @param event onClick event\n   */\n  handleSubmitFile(event) {\n    event.preventDefault();\n    const fileToUpload = this.fileInput.current.files[0];\n    if (this.fileInput.current.files.length > 0) {\n      if (fileToUpload.name !== \"\") {\n        const data = new FormData();\n        data.append(\"file\", fileToUpload);\n        data.append(\"fileName\", fileToUpload.name);\n        fetch(constants.FILE_UPLOAD_END_POINT, {\n          method: 'POST',\n          body: data\n        }).then(response => {\n          if (!response.ok) {\n            response.text().then(errorMessage => {\n              alert(errorMessage);\n            });\n          } else {\n            return response.json();\n          }\n        }).then(items => {\n          if (items != null) {\n            this.props.onLoading(true);\n            this.setState({\n              uploadId: items.submissionId\n            });\n          }\n        }).catch(error => {\n          this.fileInput.current.value = null;\n          alert('Failed to fetch: ' + error.message);\n        });\n      }\n    }\n  }\n\n  /**\n   * Check the fetching status once file is successfully submitted,\n   * update the boolean state and call related functions from respectively\n   */\n  handleCheckStatus() {\n    fetch(constants.FILE_STATUS_END_POINT + this.state.uploadId).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Fail to fetch\");\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      if (data.status.toString() === \"FINISHED\") {\n        this.handleChangeId();\n        this.fileInput.current.value = null;\n        this.props.onLoading(false);\n        this.setState({\n          status: data.status.toString()\n        });\n      } else if (data.status.toString() === \"ERROR\") {\n        alert(\"The file could not be processed by the server. Please check that it is a valid file\");\n        this.fileInput.current.value = null;\n        this.props.onLoading(false);\n        this.setState({\n          status: data.status.toString()\n        });\n      } else {\n        this.setState({\n          status: data.status.toString()\n        });\n      }\n    }).catch(console.log);\n  }\n\n  /**\n   * Call back function that updates PDB ID\n   */\n  handleChangeId() {\n    this.props.onPdbIdChange(this.state.uploadId);\n  }\n  render() {\n    if (this.state.uploadId != null && this.props.loading) {\n      setTimeout(() => {\n        this.handleCheckStatus();\n      }, 1000);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"PdbFile\",\n        accept: \".cif,.bcif,.pdb\",\n        ref: this.fileInput,\n        style: {\n          width: 230\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: this.handleSubmitFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), this.props.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 40\n      }, this), this.props.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Now Processing: \", this.state.uploadId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","constants","jsxDEV","_jsxDEV","FileUpload","constructor","props","state","uploadId","handleSubmitFile","bind","handleCheckStatus","handleChangeId","fileInput","createRef","event","preventDefault","fileToUpload","current","files","length","name","data","FormData","append","fetch","FILE_UPLOAD_END_POINT","method","body","then","response","ok","text","errorMessage","alert","json","items","onLoading","setState","submissionId","catch","error","value","message","FILE_STATUS_END_POINT","Error","status","toString","console","log","onPdbIdChange","render","loading","setTimeout","children","type","id","accept","ref","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className"],"sources":["/Users/zijielei/Documents/GitHub/sample_work/src/ui/FileUpload.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../App.css';\nimport * as constants from '../Data';\n\nexport class FileUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {uploadId: null}\n        this.handleSubmitFile = this.handleSubmitFile.bind(this);\n        this.handleCheckStatus = this.handleCheckStatus.bind(this);\n        this.handleChangeId = this.handleChangeId.bind(this);\n        this.fileInput = React.createRef();\n    }\n\n    /**\n     * Handles the submission and fetching process when file is uploaded\n     *\n     * @param event onClick event\n     */\n    handleSubmitFile(event) {\n        event.preventDefault();\n        const fileToUpload = this.fileInput.current.files[0];\n        if (this.fileInput.current.files.length > 0) {\n            if (fileToUpload.name !== \"\") {\n                const data = new FormData();\n                data.append(\"file\", fileToUpload);\n                data.append(\"fileName\", fileToUpload.name);\n\n                fetch(constants.FILE_UPLOAD_END_POINT, {\n                    method: 'POST',\n                    body: data\n                })\n                    .then(response => {\n                        if (!response.ok) {\n                            response.text().then(errorMessage => {\n                                alert(errorMessage);\n                            })\n                        } else {\n                            return response.json();\n                        }\n                    })\n                    .then(items => {\n                        if (items != null) {\n                            this.props.onLoading(true);\n                            this.setState({uploadId: items.submissionId});\n                        }\n                    })\n                    .catch(error => {\n                        this.fileInput.current.value = null;\n                        alert('Failed to fetch: ' + error.message);\n                    });\n            }\n        }\n    }\n\n    /**\n     * Check the fetching status once file is successfully submitted,\n     * update the boolean state and call related functions from respectively\n     */\n    handleCheckStatus() {\n        fetch(constants.FILE_STATUS_END_POINT + this.state.uploadId)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Fail to fetch\");\n                } else {\n                    return response.json();\n                }\n            })\n            .then((data) => {\n                if (data.status.toString() === \"FINISHED\") {\n                    this.handleChangeId();\n                    this.fileInput.current.value = null;\n                    this.props.onLoading(false);\n                    this.setState({status: data.status.toString()});\n                } else if (data.status.toString() === \"ERROR\") {\n                    alert(\"The file could not be processed by the server. Please check that it is a valid file\");\n                    this.fileInput.current.value = null;\n                    this.props.onLoading(false);\n                    this.setState({status: data.status.toString()});\n                } else {\n                    this.setState({status: data.status.toString()});\n                }\n            })\n            .catch(console.log)\n    }\n\n    /**\n     * Call back function that updates PDB ID\n     */\n    handleChangeId() {\n        this.props.onPdbIdChange(this.state.uploadId);\n    }\n\n    render() {\n        if (this.state.uploadId != null && this.props.loading) {\n            setTimeout(() => {\n                this.handleCheckStatus();\n            }, 1000);\n        }\n\n        return (\n            <div>\n                <input type=\"file\" id=\"PdbFile\" accept={\".cif,.bcif,.pdb\"} ref={this.fileInput} style={{width: 230}}/>\n                <Button type=\"submit\" onClick={this.handleSubmitFile}>Upload</Button>\n                {this.props.loading && <div className=\"spinner\"/>}\n                {this.props.loading && <div>Now Processing: {this.state.uploadId}</div>}\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}