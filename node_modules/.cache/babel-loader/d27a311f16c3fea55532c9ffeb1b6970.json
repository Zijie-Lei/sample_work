{"ast":null,"code":"var _jsxFileName = \"/Users/zijielei/Documents/GitHub/sample_work/src/ui/PdbInfoPanel.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport * as constants from '../Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PdbInfoPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pdbInfo: null,\n      pdbId: null\n    };\n  }\n\n  /**\n   * fetch PDB Info data from EPPIC endpoint, update state respectively\n   */\n  loadPdbInfoData() {\n    if (this.props.pdbId != null) {\n      console.log(\"Loading PdbInfo data for \" + this.props.pdbId);\n      fetch(constants.PDBINFO_END_POINT + this.props.pdbId).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Fail to fetch\");\n        } else {\n          return response.json();\n        }\n      }).then(data => {\n        this.setState({\n          pdbInfo: data,\n          pdbId: this.props.pdbId\n        });\n      }).catch(console.log);\n    }\n  }\n  render() {\n    if (this.props.pdbId == null) {\n      return null;\n    }\n    if (this.state.pdbId !== this.props.pdbId) {\n      this.loadPdbInfoData();\n    }\n    if (this.state.pdbInfo == null) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-left\",\n        children: this.state.pdbInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-left\",\n        children: [this.state.pdbInfo.expMethod, \" - \", this.state.pdbInfo.spaceGroup, \" - \", this.state.pdbInfo.resolution.toFixed(2), \" \\u212B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","constants","jsxDEV","_jsxDEV","PdbInfoPanel","constructor","props","state","pdbInfo","pdbId","loadPdbInfoData","console","log","fetch","PDBINFO_END_POINT","then","response","ok","Error","json","data","setState","catch","render","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","expMethod","spaceGroup","resolution","toFixed"],"sources":["/Users/zijielei/Documents/GitHub/sample_work/src/ui/PdbInfoPanel.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\nimport * as constants from '../Data';\n\nexport class PdbInfoPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {pdbInfo: null, pdbId: null};\n    }\n\n    /**\n     * fetch PDB Info data from EPPIC endpoint, update state respectively\n     */\n    loadPdbInfoData() {\n        if (this.props.pdbId != null) {\n            console.log(\"Loading PdbInfo data for \" + this.props.pdbId);\n            fetch(constants.PDBINFO_END_POINT + this.props.pdbId)\n                .then((response) => {\n                    if (!response.ok) {\n                        throw new Error(\"Fail to fetch\");\n                    } else {\n                        return response.json();\n                    }\n                })\n                .then((data) => {\n                    this.setState({pdbInfo: data, pdbId: this.props.pdbId})\n                })\n                .catch(console.log)\n        }\n    }\n\n    render() {\n\n        if (this.props.pdbId == null) {\n            return null;\n        }\n\n        if (this.state.pdbId !== this.props.pdbId) {\n            this.loadPdbInfoData();\n        }\n\n        if (this.state.pdbInfo == null)\n            return null;\n\n        return (\n            <div>\n                <h4 className=\"text-left\">\n                    {this.state.pdbInfo.title}\n                </h4>\n                <p className=\"text-left\">\n                    {this.state.pdbInfo.expMethod} - {this.state.pdbInfo.spaceGroup} - {this.state.pdbInfo.resolution.toFixed(2)} â„«\n                </p>\n\n            </div>\n        );\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,YAAY;AACnB,OAAO,KAAKC,SAAS,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,YAAY,SAASJ,SAAS,CAAC;EAExCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAACC,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAC;EAC7C;;EAEA;AACJ;AACA;EACIC,eAAeA,CAAA,EAAG;IACd,IAAI,IAAI,CAACJ,KAAK,CAACG,KAAK,IAAI,IAAI,EAAE;MAC1BE,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAACN,KAAK,CAACG,KAAK,CAAC;MAC3DI,KAAK,CAACZ,SAAS,CAACa,iBAAiB,GAAG,IAAI,CAACR,KAAK,CAACG,KAAK,CAAC,CAChDM,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;QACpC,CAAC,MAAM;UACH,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC1B;MACJ,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACZ,IAAI,CAACC,QAAQ,CAAC;UAACb,OAAO,EAAEY,IAAI;UAAEX,KAAK,EAAE,IAAI,CAACH,KAAK,CAACG;QAAK,CAAC,CAAC;MAC3D,CAAC,CAAC,CACDa,KAAK,CAACX,OAAO,CAACC,GAAG,CAAC;IAC3B;EACJ;EAEAW,MAAMA,CAAA,EAAG;IAEL,IAAI,IAAI,CAACjB,KAAK,CAACG,KAAK,IAAI,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IAEA,IAAI,IAAI,CAACF,KAAK,CAACE,KAAK,KAAK,IAAI,CAACH,KAAK,CAACG,KAAK,EAAE;MACvC,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1B;IAEA,IAAI,IAAI,CAACH,KAAK,CAACC,OAAO,IAAI,IAAI,EAC1B,OAAO,IAAI;IAEf,oBACIL,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAIsB,SAAS,EAAC,WAAW;QAAAD,QAAA,EACpB,IAAI,CAACjB,KAAK,CAACC,OAAO,CAACkB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACL3B,OAAA;QAAGsB,SAAS,EAAC,WAAW;QAAAD,QAAA,GACnB,IAAI,CAACjB,KAAK,CAACC,OAAO,CAACuB,SAAS,EAAC,KAAG,EAAC,IAAI,CAACxB,KAAK,CAACC,OAAO,CAACwB,UAAU,EAAC,KAAG,EAAC,IAAI,CAACzB,KAAK,CAACC,OAAO,CAACyB,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,SACjH;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAEd;AACJ"},"metadata":{},"sourceType":"module"}