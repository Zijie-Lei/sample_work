{"ast":null,"code":"var _jsxFileName = \"/Users/zijielei/Documents/GitHub/sample_work/src/ui/SequenceTable.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport '../App.css';\nimport * as constants from '../Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class SequenceTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequences: null,\n      pdbId: null\n    };\n    this.loadSequence = this.loadSequence.bind(this);\n  }\n\n  /**\n   * fetch sequence data from EPPIC sequence endpoint, update state respectively\n   */\n  loadSequence() {\n    if (this.props.pdbId != null) {\n      console.log(\"Loading sequence data for \" + this.props.pdbId);\n      fetch(constants.SEQUENCES_END_POINT + this.props.pdbId).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Fail to fetch\");\n        } else {\n          return response.json();\n        }\n      }).then(data => {\n        const proteinData = data.filter(sequence => sequence.protein);\n        this.setState({\n          sequences: proteinData,\n          pdbId: this.props.pdbId\n        });\n      }).catch(console.log);\n    }\n  }\n  render() {\n    if (this.props.pdbId == null) {\n      return null;\n    }\n    if (this.state.pdbId !== this.props.pdbId) {\n      this.loadSequence();\n      return null;\n    }\n    const Sequences = _ref => {\n      let {\n        sequences\n      } = _ref;\n      if (sequences != null) {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sequences.map(sequence => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: sequence.repChain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sequence.memberChains\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sequence.refUniProtId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sequence.numHomologs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, sequence.repChain, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Representative chain ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Member chain IDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reference UniProt ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Number of homolog sequences in MSA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sequences, {\n        sequences: this.state.sequences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Table","constants","jsxDEV","_jsxDEV","SequenceTable","constructor","props","state","sequences","pdbId","loadSequence","bind","console","log","fetch","SEQUENCES_END_POINT","then","response","ok","Error","json","data","proteinData","filter","sequence","protein","setState","catch","render","Sequences","_ref","children","map","repChain","fileName","_jsxFileName","lineNumber","columnNumber","memberChains","refUniProtId","numHomologs","striped","bordered","hover"],"sources":["/Users/zijielei/Documents/GitHub/sample_work/src/ui/SequenceTable.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Table from 'react-bootstrap/Table';\nimport '../App.css';\nimport * as constants from '../Data';\n\nexport class SequenceTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {sequences: null, pdbId: null}\n        this.loadSequence = this.loadSequence.bind(this)\n    }\n\n    /**\n     * fetch sequence data from EPPIC sequence endpoint, update state respectively\n     */\n    loadSequence() {\n        if (this.props.pdbId != null) {\n            console.log(\"Loading sequence data for \" + this.props.pdbId);\n            fetch(constants.SEQUENCES_END_POINT + this.props.pdbId)\n                .then((response) => {\n                    if (!response.ok) {\n                        throw new Error(\"Fail to fetch\");\n                    } else {\n                        return response.json();\n                    }\n                })\n                .then((data) => {\n                    const proteinData = data.filter(sequence => sequence.protein)\n                    this.setState({sequences: proteinData, pdbId: this.props.pdbId})\n                })\n                .catch(console.log)\n        }\n    }\n\n    render() {\n        if (this.props.pdbId == null) {\n            return null;\n        }\n\n        if (this.state.pdbId !== this.props.pdbId) {\n            this.loadSequence();\n            return null;\n        }\n\n        const Sequences = ({sequences}) => {\n            if (sequences != null) {\n                return (\n                    <tbody>\n                    {sequences.map((sequence) => (\n                        <tr key={sequence.repChain}>\n                            <td>{sequence.repChain}</td>\n                            <td>{sequence.memberChains}</td>\n                            <td>{sequence.refUniProtId}</td>\n                            <td>{sequence.numHomologs}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                )\n            } else {\n                return (\n                    <tbody>\n                    </tbody>);\n            }\n        };\n\n        return (\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Representative chain ID</th>\n                    <th>Member chain IDs</th>\n                    <th>Reference UniProt ID</th>\n                    <th>Number of homolog sequences in MSA</th>\n                </tr>\n                </thead>\n\n                <Sequences sequences={this.state.sequences}/>\n\n            </Table>\n        )\n    }\n\n\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAO,YAAY;AACnB,OAAO,KAAKC,SAAS,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,aAAa,SAASL,SAAS,CAAC;EACzCM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAACC,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAC;IAC3C,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EACpD;;EAEA;AACJ;AACA;EACID,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACJ,KAAK,CAACG,KAAK,IAAI,IAAI,EAAE;MAC1BG,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAG,IAAI,CAACP,KAAK,CAACG,KAAK,CAAC;MAC5DK,KAAK,CAACb,SAAS,CAACc,mBAAmB,GAAG,IAAI,CAACT,KAAK,CAACG,KAAK,CAAC,CAClDO,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;QACpC,CAAC,MAAM;UACH,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC1B;MACJ,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACZ,MAAMC,WAAW,GAAGD,IAAI,CAACE,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAAC;QAC7D,IAAI,CAACC,QAAQ,CAAC;UAAClB,SAAS,EAAEc,WAAW;UAAEb,KAAK,EAAE,IAAI,CAACH,KAAK,CAACG;QAAK,CAAC,CAAC;MACpE,CAAC,CAAC,CACDkB,KAAK,CAACf,OAAO,CAACC,GAAG,CAAC;IAC3B;EACJ;EAEAe,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACtB,KAAK,CAACG,KAAK,IAAI,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IAEA,IAAI,IAAI,CAACF,KAAK,CAACE,KAAK,KAAK,IAAI,CAACH,KAAK,CAACG,KAAK,EAAE;MACvC,IAAI,CAACC,YAAY,CAAC,CAAC;MACnB,OAAO,IAAI;IACf;IAEA,MAAMmB,SAAS,GAAGC,IAAA,IAAiB;MAAA,IAAhB;QAACtB;MAAS,CAAC,GAAAsB,IAAA;MAC1B,IAAItB,SAAS,IAAI,IAAI,EAAE;QACnB,oBACIL,OAAA;UAAA4B,QAAA,EACCvB,SAAS,CAACwB,GAAG,CAAER,QAAQ,iBACpBrB,OAAA;YAAA4B,QAAA,gBACI5B,OAAA;cAAA4B,QAAA,EAAKP,QAAQ,CAACS;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BlC,OAAA;cAAA4B,QAAA,EAAKP,QAAQ,CAACc;YAAY;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChClC,OAAA;cAAA4B,QAAA,EAAKP,QAAQ,CAACe;YAAY;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChClC,OAAA;cAAA4B,QAAA,EAAKP,QAAQ,CAACgB;YAAW;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJ1Bb,QAAQ,CAACS,QAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKtB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAEhB,CAAC,MAAM;QACH,oBACIlC,OAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAChB;IACJ,CAAC;IAED,oBACIlC,OAAA,CAACH,KAAK;MAACyC,OAAO;MAACC,QAAQ;MAACC,KAAK;MAAAZ,QAAA,gBACzB5B,OAAA;QAAA4B,QAAA,eACA5B,OAAA;UAAA4B,QAAA,gBACI5B,OAAA;YAAA4B,QAAA,EAAI;UAAuB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChClC,OAAA;YAAA4B,QAAA,EAAI;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBlC,OAAA;YAAA4B,QAAA,EAAI;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BlC,OAAA;YAAA4B,QAAA,EAAI;UAAkC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAERlC,OAAA,CAAC0B,SAAS;QAACrB,SAAS,EAAE,IAAI,CAACD,KAAK,CAACC;MAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C,CAAC;EAEhB;AAGJ"},"metadata":{},"sourceType":"module"}