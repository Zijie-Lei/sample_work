{"ast":null,"code":"// TODO move to some sort of ENV file for external configuration\nexport const EPPIC_SERVER = \"http://128.6.159.137\";\nexport const INTERF_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/interfaces/\";\nexport const INTERF_RESIDUE_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/interfaceResidues/\";\nexport const ASSEMBLIES_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/assemblies/\";\nexport const ASSEMBLIES_DIAGRAM_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/assemblyDiagram/\";\nexport const SEQUENCES_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/sequences/\";\nexport const FILE_UPLOAD_END_POINT = EPPIC_SERVER + \"/rest/api/v3/submit/new\";\nexport const FILE_STATUS_END_POINT = EPPIC_SERVER + \"/rest/api/v3/submit/status/\";\nexport const PDBINFO_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/pdb/\";\nexport const IMAGE_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/image/\";\nexport const ASSEMBLY_CIF_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/assemblyCifFile/\";\nexport const INTERFACE_CIF_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/interfaceCifFile/\";\nexport const CONFIDENCE_EXCELLENT = 'images/excellent.png';\nexport const CONFIDENCE_GOOD = 'images/good.png';\nexport const BIO_EXCELLENT_CUTOFF = 0.95;\nexport const BIO_GOOD_CUTOFF = 0.8;\nexport const XTAL_EXCELLENT_CUTOFF = 0.05;\nexport const XTAL_GOOD_CUTOFF = 0.2;\nexport function getInterfCifUrl(pdbId, interfaceId) {\n  return INTERFACE_CIF_END_POINT + pdbId + \"/\" + interfaceId;\n}\nexport function getAssemblyCifUrl(pdbId, assemblyId) {\n  return ASSEMBLY_CIF_END_POINT + pdbId + \"/\" + assemblyId;\n}\nexport function getInterfImgUrl(jobId, interfId) {\n  return IMAGE_END_POINT + jobId + \"/interface/\" + interfId;\n}\nexport function getAssemblyImgUrl(jobId, assemblyId) {\n  return IMAGE_END_POINT + jobId + \"/assembly/\" + assemblyId;\n}\nexport function getAssemblyDiagramImgUrl(jobId, assemblyId) {\n  return IMAGE_END_POINT + jobId + \"/diagram/\" + assemblyId;\n}\nexport function getOpTypeImgUrl(opType) {\n  const optypeUrl = \"images/optype_\";\n  const optypeSuffix = \".png\";\n  return optypeUrl + opType + optypeSuffix;\n}\nexport function transformInterfData(data) {\n  var tData = [];\n  data.forEach(item => {\n    var scoresPerMethod = {};\n    item.interfaceScores.forEach(scoreObj => {\n      scoresPerMethod[scoreObj.method] = scoreObj;\n    });\n    for (var method in scoresPerMethod) {\n      item[method] = scoresPerMethod[method];\n    }\n    tData.push(item);\n  });\n  tData.forEach(item => {\n    delete item.interfaceScores;\n  });\n  return tData;\n}\nexport function transformAssembliesData(data) {\n  var tData = [];\n  data.forEach(item => {\n    var scoresPerMethod = {};\n    if (item.id !== 0) {\n      // we skip the special 0 assembly\n      item.assemblyScores.forEach(scoreObj => {\n        scoresPerMethod[scoreObj.method] = scoreObj;\n      });\n      for (var method in scoresPerMethod) {\n        item[method] = scoresPerMethod[method];\n      }\n      tData.push(item);\n      var sizes = [];\n      var syms = [];\n      var stos = [];\n      item.assemblyContents.forEach(cont => {\n        sizes.push(cont.mmSize);\n        syms.push(cont.symmetry);\n        stos.push(cont.stoichiometry);\n      });\n      item[\"mmSizes\"] = sizes.join(\", \");\n      item[\"symmetries\"] = syms.join(\", \");\n      item[\"stoichiometries\"] = stos.join(\", \");\n    }\n  });\n  tData.forEach(item => {\n    delete item.assemblyScores;\n  });\n  return tData;\n}","map":{"version":3,"names":["EPPIC_SERVER","INTERF_END_POINT","INTERF_RESIDUE_END_POINT","ASSEMBLIES_END_POINT","ASSEMBLIES_DIAGRAM_END_POINT","SEQUENCES_END_POINT","FILE_UPLOAD_END_POINT","FILE_STATUS_END_POINT","PDBINFO_END_POINT","IMAGE_END_POINT","ASSEMBLY_CIF_END_POINT","INTERFACE_CIF_END_POINT","CONFIDENCE_EXCELLENT","CONFIDENCE_GOOD","BIO_EXCELLENT_CUTOFF","BIO_GOOD_CUTOFF","XTAL_EXCELLENT_CUTOFF","XTAL_GOOD_CUTOFF","getInterfCifUrl","pdbId","interfaceId","getAssemblyCifUrl","assemblyId","getInterfImgUrl","jobId","interfId","getAssemblyImgUrl","getAssemblyDiagramImgUrl","getOpTypeImgUrl","opType","optypeUrl","optypeSuffix","transformInterfData","data","tData","forEach","item","scoresPerMethod","interfaceScores","scoreObj","method","push","transformAssembliesData","id","assemblyScores","sizes","syms","stos","assemblyContents","cont","mmSize","symmetry","stoichiometry","join"],"sources":["/Users/zijielei/Documents/GitHub/sample_work/src/Data.js"],"sourcesContent":["// TODO move to some sort of ENV file for external configuration\nexport const EPPIC_SERVER = \"http://128.6.159.137\";\n\nexport const INTERF_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/interfaces/\";\n\nexport const INTERF_RESIDUE_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/interfaceResidues/\";\n\nexport const ASSEMBLIES_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/assemblies/\";\n\nexport const ASSEMBLIES_DIAGRAM_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/assemblyDiagram/\";\n\nexport const SEQUENCES_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/sequences/\";\n\nexport const FILE_UPLOAD_END_POINT = EPPIC_SERVER + \"/rest/api/v3/submit/new\";\n\nexport const FILE_STATUS_END_POINT = EPPIC_SERVER + \"/rest/api/v3/submit/status/\";\n\nexport const PDBINFO_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/pdb/\";\n\nexport const IMAGE_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/image/\"\n\nexport const ASSEMBLY_CIF_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/assemblyCifFile/\"\nexport const INTERFACE_CIF_END_POINT = EPPIC_SERVER + \"/rest/api/v3/job/interfaceCifFile/\"\n\nexport const CONFIDENCE_EXCELLENT = 'images/excellent.png'\n\nexport const CONFIDENCE_GOOD = 'images/good.png'\n\nexport const BIO_EXCELLENT_CUTOFF = 0.95\n\nexport const BIO_GOOD_CUTOFF = 0.8\n\nexport const XTAL_EXCELLENT_CUTOFF = 0.05\n\nexport const XTAL_GOOD_CUTOFF = 0.2\n\nexport function getInterfCifUrl(pdbId, interfaceId) {\n    return INTERFACE_CIF_END_POINT + pdbId + \"/\" + interfaceId;\n}\n\nexport function getAssemblyCifUrl(pdbId, assemblyId) {\n    return ASSEMBLY_CIF_END_POINT + pdbId + \"/\" + assemblyId;\n}\n\nexport function getInterfImgUrl(jobId, interfId) {\n    return IMAGE_END_POINT + jobId + \"/interface/\" + interfId;\n}\n\nexport function getAssemblyImgUrl(jobId, assemblyId) {\n    return IMAGE_END_POINT + jobId + \"/assembly/\" + assemblyId;\n}\nexport function getAssemblyDiagramImgUrl(jobId, assemblyId) {\n    return IMAGE_END_POINT + jobId + \"/diagram/\" + assemblyId;\n}\n\nexport function getOpTypeImgUrl(opType) {\n    const optypeUrl = \"images/optype_\";\n    const optypeSuffix = \".png\";\n    return optypeUrl + opType + optypeSuffix;\n}\n\nexport function transformInterfData(data) {\n    var tData = [];\n\n    data.forEach(item => {\n        var scoresPerMethod = {};\n        item.interfaceScores.forEach(scoreObj => {\n            scoresPerMethod[scoreObj.method] = scoreObj;\n        });\n        for(var method in scoresPerMethod) {\n            item[method] = scoresPerMethod[method];\n        }\n        tData.push(item);\n        });\n\n    tData.forEach(item => {\n        delete item.interfaceScores;\n    });\n\n    return tData;\n}\n\nexport function transformAssembliesData(data) {\n    var tData = [];\n\n    data.forEach(item => {\n        var scoresPerMethod = {};\n\n        if (item.id !== 0) { // we skip the special 0 assembly\n            item.assemblyScores.forEach(scoreObj => {\n                scoresPerMethod[scoreObj.method] = scoreObj;\n            });\n            for(var method in scoresPerMethod) {\n                item[method] = scoresPerMethod[method];\n            }\n\n            tData.push(item);\n            var sizes = [];\n            var syms = [];\n            var stos = [];\n            item.assemblyContents.forEach(cont => {\n                sizes.push(cont.mmSize);\n                syms.push(cont.symmetry);\n                stos.push(cont.stoichiometry);\n            });\n            item[\"mmSizes\"] = sizes.join(\", \");\n            item[\"symmetries\"] = syms.join(\", \");\n            item[\"stoichiometries\"] = stos.join(\", \");\n        }\n    });\n\n    tData.forEach(item => {\n        delete item.assemblyScores;\n    });\n\n    return tData;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}