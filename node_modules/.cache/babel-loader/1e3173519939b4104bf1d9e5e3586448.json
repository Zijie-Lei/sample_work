{"ast":null,"code":"var _jsxFileName = \"/Users/zijielei/Documents/GitHub/sample_work/src/ui/LeftNav.js\";\nimport React, { Component } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LeftNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobIds: []\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  /**\n   * add new element to the left nav bar\n   */\n  addJob() {\n    if (this.props.current != null && !this.state.jobIds.includes(this.props.current)) {\n      //console.log(\"LeftNav does not have job id \" + this.props.current);\n      // see https://www.robinwieruch.de/react-state-array-add-update-remove\n      this.setState(state => {\n        const jobIds = state.jobIds.concat(this.props.current);\n        return {\n          jobIds\n        };\n      });\n    }\n  }\n\n  /**\n   * Add new element to left nav bar new PDB ID is submitted\n   *\n   * @param prevProps previously submitted PDB ID\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props.current !== prevProps.current) {\n      this.addJob();\n    }\n  }\n\n  /**\n   * handles selection of element in left nav bar, update state of the main class respectively\n   *\n   * @param e existing element in the left nav bar\n   */\n  handleSelect(e) {\n    this.props.onPdbIdChange(e);\n  }\n\n  /**\n   * handles the loading process of file upload, a new nav named \"loading\" will be displayed at left nav bar\n   * depending on the status of upload\n   *\n   * @returns {JSX.Element} nav element that displays \"loading\" in left nav bar\n   */\n  handleLoading() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.loading && /*#__PURE__*/_jsxDEV(Nav.Link, {\n        disabled: true,\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Nav, {\n      activeKey: this.props.current,\n      className: \"flex-column\",\n      onSelect: this.handleSelect,\n      variant: \"tabs\",\n      children: [this.state.jobIds.map(jobId => /*#__PURE__*/_jsxDEV(Nav.Link, {\n        eventKey: jobId,\n        children: jobId.length > 4 ? jobId.substring(0, 4) + \"..\" + jobId.substring(jobId.length - 4) : jobId\n      }, jobId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)), this.handleLoading()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Nav","jsxDEV","_jsxDEV","LeftNav","constructor","props","state","jobIds","handleSelect","bind","addJob","current","includes","setState","concat","componentDidUpdate","prevProps","e","onPdbIdChange","handleLoading","children","loading","Link","disabled","fileName","_jsxFileName","lineNumber","columnNumber","render","activeKey","className","onSelect","variant","map","jobId","eventKey","length","substring"],"sources":["/Users/zijielei/Documents/GitHub/sample_work/src/ui/LeftNav.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport '../App.css';\n\nexport class LeftNav extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {jobIds: []};\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    /**\n     * add new element to the left nav bar\n     */\n    addJob() {\n        if (this.props.current != null && !this.state.jobIds.includes(this.props.current)) {\n            //console.log(\"LeftNav does not have job id \" + this.props.current);\n            // see https://www.robinwieruch.de/react-state-array-add-update-remove\n            this.setState(state => {\n                const jobIds = state.jobIds.concat(this.props.current);\n                return {\n                    jobIds\n                };\n            });\n        }\n    }\n\n    /**\n     * Add new element to left nav bar new PDB ID is submitted\n     *\n     * @param prevProps previously submitted PDB ID\n     */\n    componentDidUpdate(prevProps) {\n        if (this.props.current !== prevProps.current) {\n            this.addJob();\n        }\n    }\n\n    /**\n     * handles selection of element in left nav bar, update state of the main class respectively\n     *\n     * @param e existing element in the left nav bar\n     */\n    handleSelect(e) {\n        this.props.onPdbIdChange(e);\n    }\n\n    /**\n     * handles the loading process of file upload, a new nav named \"loading\" will be displayed at left nav bar\n     * depending on the status of upload\n     *\n     * @returns {JSX.Element} nav element that displays \"loading\" in left nav bar\n     */\n    handleLoading(){\n        return (\n            <div>\n                {this.props.loading && <Nav.Link disabled>\n                    loading\n                </Nav.Link>}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Nav\n                activeKey={this.props.current}\n                className=\"flex-column\"\n                onSelect={this.handleSelect}\n                variant=\"tabs\">\n                {this.state.jobIds.map(jobId => (\n                    <Nav.Link eventKey={jobId} key={jobId}>{jobId.length > 4 ?\n                        jobId.substring(0, 4) + \"..\" + jobId.substring(jobId.length - 4) :\n                        jobId}\n                    </Nav.Link>\n                ))\n                }\n                {this.handleLoading()}\n            </Nav>\n        );\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,OAAO,MAAMC,OAAO,SAASJ,SAAS,CAAC;EAEnCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAACC,MAAM,EAAE;IAAE,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EACpD;;EAEA;AACJ;AACA;EACIC,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACL,KAAK,CAACM,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAACL,KAAK,CAACC,MAAM,CAACK,QAAQ,CAAC,IAAI,CAACP,KAAK,CAACM,OAAO,CAAC,EAAE;MAC/E;MACA;MACA,IAAI,CAACE,QAAQ,CAACP,KAAK,IAAI;QACnB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM,CAACO,MAAM,CAAC,IAAI,CAACT,KAAK,CAACM,OAAO,CAAC;QACtD,OAAO;UACHJ;QACJ,CAAC;MACL,CAAC,CAAC;IACN;EACJ;;EAEA;AACJ;AACA;AACA;AACA;EACIQ,kBAAkBA,CAACC,SAAS,EAAE;IAC1B,IAAI,IAAI,CAACX,KAAK,CAACM,OAAO,KAAKK,SAAS,CAACL,OAAO,EAAE;MAC1C,IAAI,CAACD,MAAM,CAAC,CAAC;IACjB;EACJ;;EAEA;AACJ;AACA;AACA;AACA;EACIF,YAAYA,CAACS,CAAC,EAAE;IACZ,IAAI,CAACZ,KAAK,CAACa,aAAa,CAACD,CAAC,CAAC;EAC/B;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACIE,aAAaA,CAAA,EAAE;IACX,oBACIjB,OAAA;MAAAkB,QAAA,EACK,IAAI,CAACf,KAAK,CAACgB,OAAO,iBAAInB,OAAA,CAACF,GAAG,CAACsB,IAAI;QAACC,QAAQ;QAAAH,QAAA,EAAC;MAE1C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEd;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACI1B,OAAA,CAACF,GAAG;MACA6B,SAAS,EAAE,IAAI,CAACxB,KAAK,CAACM,OAAQ;MAC9BmB,SAAS,EAAC,aAAa;MACvBC,QAAQ,EAAE,IAAI,CAACvB,YAAa;MAC5BwB,OAAO,EAAC,MAAM;MAAAZ,QAAA,GACb,IAAI,CAACd,KAAK,CAACC,MAAM,CAAC0B,GAAG,CAACC,KAAK,iBACxBhC,OAAA,CAACF,GAAG,CAACsB,IAAI;QAACa,QAAQ,EAAED,KAAM;QAAAd,QAAA,EAAcc,KAAK,CAACE,MAAM,GAAG,CAAC,GACpDF,KAAK,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAGH,KAAK,CAACG,SAAS,CAACH,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,GAChEF;MAAK,GAFuBA,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG3B,CACb,CAAC,EAED,IAAI,CAACR,aAAa,CAAC,CAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEd;AACJ"},"metadata":{},"sourceType":"module"}