{"ast":null,"code":"var _jsxFileName = \"/Users/zijielei/Documents/GitHub/sample_work/src/App.js\";\nimport React, { Component } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport * as constants from './Data';\nimport { TopNav } from './ui/TopNav';\nimport { LeftNav } from './ui/LeftNav';\nimport { PdbInfoPanel } from \"./ui/PdbInfoPanel\";\nimport { InputFormPanel } from \"./ui/InputFormPanel\";\nimport { AssembliesTable } from \"./ui/AssemblyTable\";\nimport { InterfTable } from \"./ui/InterfaceTable\";\nimport { SequenceTable } from \"./ui/SequenceTable\";\nimport { FileUpload } from \"./ui/FileUpload\";\nimport './App.css';\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EppicPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nclass EppicPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePdbIdChange = this.handlePdbIdChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handlePopState = this.handlePopState.bind(this);\n    this.handleUrlParem = this.handleUrlParem.bind(this);\n    this.handleLoading = this.handleLoading.bind(this);\n    this.state = {\n      pdbId: null,\n      uniprotVersion: null,\n      tab: \"assemblies\",\n      interfaceClusterIdsToFilter: null,\n      currAssembly: null,\n      loading: false\n    };\n  }\n  componentDidMount() {\n    window.addEventListener('popstate', this.handlePopState);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('popstate', this.handlePopState);\n  }\n  handlePopState(e) {\n    e.preventDefault();\n    if (e.state == null) {\n      this.setState({\n        pdbId: null,\n        uniprotVersion: null,\n        tab: \"assemblies\",\n        interfaceClusterIdsToFilter: null,\n        currAssembly: null\n      });\n    } else {\n      this.setState({\n        pdbId: e.state.pdbId,\n        uniprotVersion: e.state.uniprotVersion,\n        tab: e.state.tab,\n        interfaceClusterIdsToFilter: e.state.interfaceClusterIdsToFilter,\n        currAssembly: e.state.currAssembly\n      });\n    }\n  }\n  handleUrlParem() {\n    const url = window.location.hash.substring(1);\n    if (url !== \"\") {\n      const parts = url.split('/');\n      this.handlePdbIdChange(parts[1], parts[0]);\n    }\n  }\n  handlePdbIdChange(pdbId) {\n    let tab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'assemblies';\n    fetch(constants.PDBINFO_END_POINT + pdbId).then(response => {\n      if (!response.ok) {\n        alert(\"Could not find data for given PDB id\");\n        //throw new Error(\"Fail to fetch\");\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      this.setState({\n        pdbId: pdbId,\n        tab: tab,\n        uniprotVersion: data.runParameters.uniProtVersion,\n        interfaceClusterIdsToFilter: null,\n        currAssembly: null\n      });\n    }).catch(console.log);\n  }\n  handleReset() {\n    this.setState({\n      interfaceClusterIdsToFilter: null,\n      currAssembly: null\n    });\n  }\n  handleFilter(filter) {\n    this.setState({\n      interfaceClusterIdsToFilter: filter\n    });\n  }\n  handleSelect(key, assembly) {\n    if (Number.isInteger(assembly)) {\n      this.setState({\n        currAssembly: assembly\n      });\n    }\n    this.setState({\n      tab: key\n    });\n  }\n  handleLoading(status) {\n    this.setState({\n      loading: status\n    });\n  }\n  render() {\n    const pdbId = this.state.pdbId;\n    const newPath = this.state.currAssembly != null && this.state.tab === 'interfaces' ? \"#\" + this.state.tab + \"/\" + this.state.pdbId + \"/\" + this.state.currAssembly : \"#\" + this.state.tab + \"/\" + this.state.pdbId;\n    if (this.state.pdbId == null) {\n      this.handleUrlParem();\n    }\n    if (this.state.pdbId && window.location.hash !== newPath) {\n      window.history.pushState(this.state, null, newPath);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"float-right\",\n              src: \"images/eppic-logo.png\",\n              rounded: true,\n              height: \"35\",\n              width: \"87\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(LeftNav, {\n              current: pdbId,\n              onPdbIdChange: this.handlePdbIdChange,\n              loading: this.state.loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(InputFormPanel, {\n                    onPdbIdChange: this.handlePdbIdChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FileUpload, {\n                    onPdbIdChange: this.handlePdbIdChange,\n                    onLoading: this.handleLoading,\n                    loading: this.state.loading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(PdbInfoPanel, {\n                pdbId: pdbId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Tabs, {\n                    activeKey: this.state.tab,\n                    id: \"main-tabs\",\n                    onSelect: this.handleSelect,\n                    transition: false,\n                    children: [/*#__PURE__*/_jsxDEV(Tab, {\n                      eventKey: \"assemblies\",\n                      title: \"Assemblies\",\n                      children: /*#__PURE__*/_jsxDEV(AssembliesTable, {\n                        pdbId: pdbId,\n                        onSelect: this.handleSelect,\n                        onFilter: this.handleFilter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                      eventKey: \"interfaces\",\n                      title: Number.isInteger(this.state.currAssembly) ? \"Interfaces for assembly \" + this.state.currAssembly : \"Interfaces\",\n                      children: [this.state.interfaceClusterIdsToFilter != null ? /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: this.handleReset,\n                        size: \"sm\",\n                        children: \"All interfaces\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 57\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(InterfTable, {\n                        pdbId: pdbId,\n                        onReset: this.handleReset,\n                        interfaceClusterIdsToFilter: this.state.interfaceClusterIdsToFilter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                      eventKey: \"sequence\",\n                      title: this.state.uniprotVersion != null ? \"Sequence information (UniProt \" + this.state.uniprotVersion + \")\" : \"Sequence information\",\n                      children: /*#__PURE__*/_jsxDEV(SequenceTable, {\n                        pdbId: pdbId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this), Number.isInteger(this.state.currAssembly) ? /*#__PURE__*/_jsxDEV(Tab, {\n                      title: /*#__PURE__*/_jsxDEV(\"img\", {\n                        style: {\n                          width: 25\n                        },\n                        alt: 'diagramInTab',\n                        src: constants.getAssemblyDiagramImgUrl(this.state.pdbId, this.state.currAssembly)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","Tab","Tabs","Container","Row","Col","Image","constants","TopNav","LeftNav","PdbInfoPanel","InputFormPanel","AssembliesTable","InterfTable","SequenceTable","FileUpload","Button","jsxDEV","_jsxDEV","App","children","EppicPanel","fileName","_jsxFileName","lineNumber","columnNumber","_c","constructor","props","handlePdbIdChange","bind","handleSelect","handleFilter","handleReset","handlePopState","handleUrlParem","handleLoading","state","pdbId","uniprotVersion","tab","interfaceClusterIdsToFilter","currAssembly","loading","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","e","preventDefault","setState","url","location","hash","substring","parts","split","arguments","length","undefined","fetch","PDBINFO_END_POINT","then","response","ok","alert","json","data","runParameters","uniProtVersion","catch","console","log","filter","key","assembly","Number","isInteger","status","render","newPath","history","pushState","className","fluid","xs","src","rounded","height","width","current","onPdbIdChange","onLoading","activeKey","id","onSelect","transition","eventKey","title","onFilter","onClick","size","onReset","style","alt","getAssemblyDiagramImgUrl","$RefreshReg$"],"sources":["/Users/zijielei/Documents/GitHub/sample_work/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport * as constants from './Data';\nimport {TopNav} from './ui/TopNav'\nimport {LeftNav} from './ui/LeftNav'\nimport {PdbInfoPanel} from \"./ui/PdbInfoPanel\";\nimport {InputFormPanel} from \"./ui/InputFormPanel\"\nimport {AssembliesTable} from \"./ui/AssemblyTable\";\nimport {InterfTable} from \"./ui/InterfaceTable\";\nimport {SequenceTable} from \"./ui/SequenceTable\";\nimport {FileUpload} from \"./ui/FileUpload\"\nimport './App.css';\nimport Button from \"react-bootstrap/Button\";\n\n\nfunction App() {\n\n    return (\n        <div>\n            <EppicPanel/>\n        </div>\n    );\n}\n\nclass EppicPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePdbIdChange = this.handlePdbIdChange.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handlePopState = this.handlePopState.bind(this);\n        this.handleUrlParem = this.handleUrlParem.bind(this);\n        this.handleLoading = this.handleLoading.bind(this);\n        this.state = {\n            pdbId: null,\n            uniprotVersion: null,\n            tab: \"assemblies\",\n            interfaceClusterIdsToFilter: null,\n            currAssembly: null,\n            loading: false,\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('popstate', this.handlePopState);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('popstate', this.handlePopState);\n    }\n\n    handlePopState(e) {\n        e.preventDefault();\n        if (e.state == null) {\n            this.setState({\n                pdbId: null,\n                uniprotVersion: null,\n                tab: \"assemblies\",\n                interfaceClusterIdsToFilter: null,\n                currAssembly: null\n            })\n        } else {\n            this.setState({\n                pdbId: e.state.pdbId,\n                uniprotVersion: e.state.uniprotVersion,\n                tab: e.state.tab,\n                interfaceClusterIdsToFilter: e.state.interfaceClusterIdsToFilter,\n                currAssembly: e.state.currAssembly\n            })\n        }\n    }\n\n    handleUrlParem() {\n        const url = window.location.hash.substring(1);\n        if (url !== \"\") {\n            const parts = url.split('/');\n            this.handlePdbIdChange(parts[1], parts[0]);\n        }\n    }\n\n    handlePdbIdChange(pdbId, tab = 'assemblies') {\n        fetch(constants.PDBINFO_END_POINT + pdbId)\n            .then((response) => {\n                if (!response.ok) {\n                    alert(\"Could not find data for given PDB id\");\n                    //throw new Error(\"Fail to fetch\");\n                } else {\n                    return response.json();\n                }\n            })\n            .then((data) => {\n                this.setState({\n                    pdbId: pdbId,\n                    tab: tab,\n                    uniprotVersion: data.runParameters.uniProtVersion,\n                    interfaceClusterIdsToFilter: null,\n                    currAssembly: null\n                });\n            })\n            .catch(console.log)\n    }\n\n    handleReset() {\n        this.setState({interfaceClusterIdsToFilter: null, currAssembly: null});\n    }\n\n    handleFilter(filter) {\n        this.setState({interfaceClusterIdsToFilter: filter});\n    }\n\n    handleSelect(key, assembly) {\n        if (Number.isInteger(assembly)) {\n            this.setState({currAssembly: assembly});\n        }\n        this.setState({tab: key});\n    }\n\n    handleLoading(status) {\n        this.setState({loading: status});\n    }\n\n    render() {\n        const pdbId = this.state.pdbId;\n        const newPath = this.state.currAssembly != null && this.state.tab === 'interfaces'?\n            \"#\" + this.state.tab + \"/\" + this.state.pdbId + \"/\" + this.state.currAssembly\n            :\n            \"#\" + this.state.tab + \"/\" + this.state.pdbId;\n\n        if (this.state.pdbId == null) {\n            this.handleUrlParem();\n        }\n\n        if (this.state.pdbId && window.location.hash !== newPath) {\n            window.history.pushState(this.state, null, newPath);\n        }\n\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                </header>\n\n                {/* fluid=true is to fill all horizontal space */}\n                <Container fluid={true}>\n                    <Row>\n                        <Col>\n                            <TopNav/>\n                        </Col>\n                        <Col xs={2}>\n                            <Image className=\"float-right\" src=\"images/eppic-logo.png\" rounded height=\"35\" width=\"87\"/>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={1}>\n                            <LeftNav\n                                current={pdbId}\n                                onPdbIdChange={this.handlePdbIdChange}\n                                loading={this.state.loading}\n                            />\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Col xs={4}>\n                                    <div>\n                                        <InputFormPanel\n                                            onPdbIdChange={this.handlePdbIdChange}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col xs={4}>\n                                    <div>\n                                        <FileUpload\n                                            onPdbIdChange={this.handlePdbIdChange}\n                                            onLoading={this.handleLoading}\n                                            loading={this.state.loading}\n                                        />\n                                    </div>\n                                </Col>\n\n                            </Row>\n                            <Row>\n                                <PdbInfoPanel pdbId={pdbId}/>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <div>\n\n                                        <Tabs\n                                            activeKey={this.state.tab}\n                                            id=\"main-tabs\"\n                                            onSelect={this.handleSelect}\n                                            transition={false}>\n                                            <Tab eventKey=\"assemblies\" title=\"Assemblies\">\n                                                <AssembliesTable\n                                                    pdbId={pdbId}\n                                                    onSelect={this.handleSelect}\n                                                    onFilter={this.handleFilter}\n                                                />\n                                            </Tab>\n                                            <Tab eventKey=\"interfaces\"\n                                                 title={Number.isInteger(this.state.currAssembly) ? \"Interfaces for assembly \" + this.state.currAssembly : \"Interfaces\"}>\n                                                {\n                                                    this.state.interfaceClusterIdsToFilter != null ?\n                                                        <Button onClick={this.handleReset} size=\"sm\">\n                                                            All interfaces\n                                                        </Button>\n                                                        :\n                                                        <div></div>\n                                                }\n                                                <InterfTable\n                                                    pdbId={pdbId}\n                                                    onReset={this.handleReset}\n                                                    interfaceClusterIdsToFilter={this.state.interfaceClusterIdsToFilter}\n                                                />\n                                            </Tab>\n                                            <Tab eventKey=\"sequence\"\n                                                 title={this.state.uniprotVersion != null ? \"Sequence information (UniProt \" + this.state.uniprotVersion + \")\" : \"Sequence information\"}>\n                                                <SequenceTable\n                                                    pdbId={pdbId}\n                                                />\n                                            </Tab>\n                                            {Number.isInteger(this.state.currAssembly) ?\n                                                <Tab title={<img style={{width: 25}} alt={'diagramInTab'}\n                                                                 src={constants.getAssemblyDiagramImgUrl(this.state.pdbId, this.state.currAssembly)}/>}></Tab>\n                                                :\n                                                <div/>\n                                            }\n                                        </Tabs>\n                                    </div>\n\n                                </Col>\n                            </Row>\n\n                        </Col>\n\n                    </Row>\n\n                </Container>\n\n            </div>\n        );\n    }\n}\n\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAO,KAAKC,SAAS,MAAM,QAAQ;AACnC,SAAQC,MAAM,QAAO,aAAa;AAClC,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,YAAY,QAAO,mBAAmB;AAC9C,SAAQC,cAAc,QAAO,qBAAqB;AAClD,SAAQC,eAAe,QAAO,oBAAoB;AAClD,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,SAAQC,aAAa,QAAO,oBAAoB;AAChD,SAAQC,UAAU,QAAO,iBAAiB;AAC1C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,GAAGA,CAAA,EAAG;EAEX,oBACID,OAAA;IAAAE,QAAA,eACIF,OAAA,CAACG,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd;AAACC,EAAA,GAPQP,GAAG;AASZ,MAAME,UAAU,SAASrB,SAAS,CAAC;EAE/B2B,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACE,YAAY,GAAG,IAAI,CAACA,YAAY,CAACF,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACG,WAAW,GAAG,IAAI,CAACA,WAAW,CAACH,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACI,cAAc,GAAG,IAAI,CAACA,cAAc,CAACJ,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACK,cAAc,GAAG,IAAI,CAACA,cAAc,CAACL,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACM,aAAa,GAAG,IAAI,CAACA,aAAa,CAACN,IAAI,CAAC,IAAI,CAAC;IAClD,IAAI,CAACO,KAAK,GAAG;MACTC,KAAK,EAAE,IAAI;MACXC,cAAc,EAAE,IAAI;MACpBC,GAAG,EAAE,YAAY;MACjBC,2BAA2B,EAAE,IAAI;MACjCC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE;IACb,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChBC,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACZ,cAAc,CAAC;EAC5D;EAEAa,oBAAoBA,CAAA,EAAG;IACnBF,MAAM,CAACG,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACd,cAAc,CAAC;EAC/D;EAEAA,cAAcA,CAACe,CAAC,EAAE;IACdA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAID,CAAC,CAACZ,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAACc,QAAQ,CAAC;QACVb,KAAK,EAAE,IAAI;QACXC,cAAc,EAAE,IAAI;QACpBC,GAAG,EAAE,YAAY;QACjBC,2BAA2B,EAAE,IAAI;QACjCC,YAAY,EAAE;MAClB,CAAC,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACS,QAAQ,CAAC;QACVb,KAAK,EAAEW,CAAC,CAACZ,KAAK,CAACC,KAAK;QACpBC,cAAc,EAAEU,CAAC,CAACZ,KAAK,CAACE,cAAc;QACtCC,GAAG,EAAES,CAAC,CAACZ,KAAK,CAACG,GAAG;QAChBC,2BAA2B,EAAEQ,CAAC,CAACZ,KAAK,CAACI,2BAA2B;QAChEC,YAAY,EAAEO,CAAC,CAACZ,KAAK,CAACK;MAC1B,CAAC,CAAC;IACN;EACJ;EAEAP,cAAcA,CAAA,EAAG;IACb,MAAMiB,GAAG,GAAGP,MAAM,CAACQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IAC7C,IAAIH,GAAG,KAAK,EAAE,EAAE;MACZ,MAAMI,KAAK,GAAGJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC;MAC5B,IAAI,CAAC5B,iBAAiB,CAAC2B,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9C;EACJ;EAEA3B,iBAAiBA,CAACS,KAAK,EAAsB;IAAA,IAApBE,GAAG,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,YAAY;IACvCG,KAAK,CAACtD,SAAS,CAACuD,iBAAiB,GAAGxB,KAAK,CAAC,CACrCyB,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACdC,KAAK,CAAC,sCAAsC,CAAC;QAC7C;MACJ,CAAC,MAAM;QACH,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZ,IAAI,CAACjB,QAAQ,CAAC;QACVb,KAAK,EAAEA,KAAK;QACZE,GAAG,EAAEA,GAAG;QACRD,cAAc,EAAE6B,IAAI,CAACC,aAAa,CAACC,cAAc;QACjD7B,2BAA2B,EAAE,IAAI;QACjCC,YAAY,EAAE;MAClB,CAAC,CAAC;IACN,CAAC,CAAC,CACD6B,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC;EAC3B;EAEAxC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACkB,QAAQ,CAAC;MAACV,2BAA2B,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAI,CAAC,CAAC;EAC1E;EAEAV,YAAYA,CAAC0C,MAAM,EAAE;IACjB,IAAI,CAACvB,QAAQ,CAAC;MAACV,2BAA2B,EAAEiC;IAAM,CAAC,CAAC;EACxD;EAEA3C,YAAYA,CAAC4C,GAAG,EAAEC,QAAQ,EAAE;IACxB,IAAIC,MAAM,CAACC,SAAS,CAACF,QAAQ,CAAC,EAAE;MAC5B,IAAI,CAACzB,QAAQ,CAAC;QAACT,YAAY,EAAEkC;MAAQ,CAAC,CAAC;IAC3C;IACA,IAAI,CAACzB,QAAQ,CAAC;MAACX,GAAG,EAAEmC;IAAG,CAAC,CAAC;EAC7B;EAEAvC,aAAaA,CAAC2C,MAAM,EAAE;IAClB,IAAI,CAAC5B,QAAQ,CAAC;MAACR,OAAO,EAAEoC;IAAM,CAAC,CAAC;EACpC;EAEAC,MAAMA,CAAA,EAAG;IACL,MAAM1C,KAAK,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK;IAC9B,MAAM2C,OAAO,GAAG,IAAI,CAAC5C,KAAK,CAACK,YAAY,IAAI,IAAI,IAAI,IAAI,CAACL,KAAK,CAACG,GAAG,KAAK,YAAY,GAC9E,GAAG,GAAG,IAAI,CAACH,KAAK,CAACG,GAAG,GAAG,GAAG,GAAG,IAAI,CAACH,KAAK,CAACC,KAAK,GAAG,GAAG,GAAG,IAAI,CAACD,KAAK,CAACK,YAAY,GAE7E,GAAG,GAAG,IAAI,CAACL,KAAK,CAACG,GAAG,GAAG,GAAG,GAAG,IAAI,CAACH,KAAK,CAACC,KAAK;IAEjD,IAAI,IAAI,CAACD,KAAK,CAACC,KAAK,IAAI,IAAI,EAAE;MAC1B,IAAI,CAACH,cAAc,CAAC,CAAC;IACzB;IAEA,IAAI,IAAI,CAACE,KAAK,CAACC,KAAK,IAAIO,MAAM,CAACQ,QAAQ,CAACC,IAAI,KAAK2B,OAAO,EAAE;MACtDpC,MAAM,CAACqC,OAAO,CAACC,SAAS,CAAC,IAAI,CAAC9C,KAAK,EAAE,IAAI,EAAE4C,OAAO,CAAC;IACvD;IAEA,oBACI/D,OAAA;MAAKkE,SAAS,EAAC,KAAK;MAAAhE,QAAA,gBAChBF,OAAA;QAAQkE,SAAS,EAAC;MAAY;QAAA9D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAGTP,OAAA,CAACf,SAAS;QAACkF,KAAK,EAAE,IAAK;QAAAjE,QAAA,gBACnBF,OAAA,CAACd,GAAG;UAAAgB,QAAA,gBACAF,OAAA,CAACb,GAAG;YAAAe,QAAA,eACAF,OAAA,CAACV,MAAM;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACNP,OAAA,CAACb,GAAG;YAACiF,EAAE,EAAE,CAAE;YAAAlE,QAAA,eACPF,OAAA,CAACZ,KAAK;cAAC8E,SAAS,EAAC,aAAa;cAACG,GAAG,EAAC,uBAAuB;cAACC,OAAO;cAACC,MAAM,EAAC,IAAI;cAACC,KAAK,EAAC;YAAI;cAAApE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENP,OAAA,CAACd,GAAG;UAAAgB,QAAA,gBACAF,OAAA,CAACb,GAAG;YAACiF,EAAE,EAAE,CAAE;YAAAlE,QAAA,eACPF,OAAA,CAACT,OAAO;cACJkF,OAAO,EAAErD,KAAM;cACfsD,aAAa,EAAE,IAAI,CAAC/D,iBAAkB;cACtCc,OAAO,EAAE,IAAI,CAACN,KAAK,CAACM;YAAQ;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNP,OAAA,CAACb,GAAG;YAAAe,QAAA,gBACAF,OAAA,CAACd,GAAG;cAAAgB,QAAA,gBACAF,OAAA,CAACb,GAAG;gBAACiF,EAAE,EAAE,CAAE;gBAAAlE,QAAA,eACPF,OAAA;kBAAAE,QAAA,eACIF,OAAA,CAACP,cAAc;oBACXiF,aAAa,EAAE,IAAI,CAAC/D;kBAAkB;oBAAAP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACNP,OAAA,CAACb,GAAG;gBAACiF,EAAE,EAAE,CAAE;gBAAAlE,QAAA,eACPF,OAAA;kBAAAE,QAAA,eACIF,OAAA,CAACH,UAAU;oBACP6E,aAAa,EAAE,IAAI,CAAC/D,iBAAkB;oBACtCgE,SAAS,EAAE,IAAI,CAACzD,aAAc;oBAC9BO,OAAO,EAAE,IAAI,CAACN,KAAK,CAACM;kBAAQ;oBAAArB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEL,CAAC,eACNP,OAAA,CAACd,GAAG;cAAAgB,QAAA,eACAF,OAAA,CAACR,YAAY;gBAAC4B,KAAK,EAAEA;cAAM;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACNP,OAAA,CAACd,GAAG;cAAAgB,QAAA,eACAF,OAAA,CAACb,GAAG;gBAAAe,QAAA,eACAF,OAAA;kBAAAE,QAAA,eAEIF,OAAA,CAAChB,IAAI;oBACD4F,SAAS,EAAE,IAAI,CAACzD,KAAK,CAACG,GAAI;oBAC1BuD,EAAE,EAAC,WAAW;oBACdC,QAAQ,EAAE,IAAI,CAACjE,YAAa;oBAC5BkE,UAAU,EAAE,KAAM;oBAAA7E,QAAA,gBAClBF,OAAA,CAACjB,GAAG;sBAACiG,QAAQ,EAAC,YAAY;sBAACC,KAAK,EAAC,YAAY;sBAAA/E,QAAA,eACzCF,OAAA,CAACN,eAAe;wBACZ0B,KAAK,EAAEA,KAAM;wBACb0D,QAAQ,EAAE,IAAI,CAACjE,YAAa;wBAC5BqE,QAAQ,EAAE,IAAI,CAACpE;sBAAa;wBAAAV,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/B;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,eACNP,OAAA,CAACjB,GAAG;sBAACiG,QAAQ,EAAC,YAAY;sBACrBC,KAAK,EAAEtB,MAAM,CAACC,SAAS,CAAC,IAAI,CAACzC,KAAK,CAACK,YAAY,CAAC,GAAG,0BAA0B,GAAG,IAAI,CAACL,KAAK,CAACK,YAAY,GAAG,YAAa;sBAAAtB,QAAA,GAEpH,IAAI,CAACiB,KAAK,CAACI,2BAA2B,IAAI,IAAI,gBAC1CvB,OAAA,CAACF,MAAM;wBAACqF,OAAO,EAAE,IAAI,CAACpE,WAAY;wBAACqE,IAAI,EAAC,IAAI;wBAAAlF,QAAA,EAAC;sBAE7C;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,gBAETP,OAAA;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAU,CAAC,eAEnBP,OAAA,CAACL,WAAW;wBACRyB,KAAK,EAAEA,KAAM;wBACbiE,OAAO,EAAE,IAAI,CAACtE,WAAY;wBAC1BQ,2BAA2B,EAAE,IAAI,CAACJ,KAAK,CAACI;sBAA4B;wBAAAnB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACvE,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,eACNP,OAAA,CAACjB,GAAG;sBAACiG,QAAQ,EAAC,UAAU;sBACnBC,KAAK,EAAE,IAAI,CAAC9D,KAAK,CAACE,cAAc,IAAI,IAAI,GAAG,gCAAgC,GAAG,IAAI,CAACF,KAAK,CAACE,cAAc,GAAG,GAAG,GAAG,sBAAuB;sBAAAnB,QAAA,eACxIF,OAAA,CAACJ,aAAa;wBACVwB,KAAK,EAAEA;sBAAM;wBAAAhB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAChB;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,EACLoD,MAAM,CAACC,SAAS,CAAC,IAAI,CAACzC,KAAK,CAACK,YAAY,CAAC,gBACtCxB,OAAA,CAACjB,GAAG;sBAACkG,KAAK,eAAEjF,OAAA;wBAAKsF,KAAK,EAAE;0BAACd,KAAK,EAAE;wBAAE,CAAE;wBAACe,GAAG,EAAE,cAAe;wBACxClB,GAAG,EAAEhF,SAAS,CAACmG,wBAAwB,CAAC,IAAI,CAACrE,KAAK,CAACC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACK,YAAY;sBAAE;wBAAApB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAC;oBAAE;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,gBAE9GP,OAAA;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAER;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CAAC;EAEd;AACJ;AAGA,eAAeN,GAAG;AAAC,IAAAO,EAAA;AAAAiF,YAAA,CAAAjF,EAAA"},"metadata":{},"sourceType":"module"}